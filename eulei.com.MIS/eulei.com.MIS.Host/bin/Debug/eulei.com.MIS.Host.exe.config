<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <connectionStrings>
    <clear />
    <add name="LocalSqlServer" connectionString="Data Source=10.10.8.180;Initial Catalog=BootMemberShip;User ID=sa;password=abc.123" providerName="System.Data.SqlClient" />

  </connectionStrings>
  <appSettings> 
    <add key="ERROR_FILE_NAME" value="ErrorLog.log"/>
    <add key="OPERATE_FILE_NAME" value="SendLog.log"/>
    <add key="LOG_FIRST_PATH" value="log"/>
    <add key="ERROR_SECOND_PATH" value="Error"/>
    <add key="OPERATE_SECOND_PATH" value="Send"/>
    <add key="ServiceCertificate" value="MIS.pfx"/>
    <add key="ServiceCertificatePassword" value="123789"/>
    <add key="EnableServiceCertificate" value="true"/>
    <add key="ClientCertificate" value="MIS.pfx"/>
    <add key="ClientCertificatePassword" value="123789"/>
  </appSettings>
  <system.web>
    <membership defaultProvider="EwordAspNetSqlMembershipProvider" userIsOnlineTimeWindow="15" hashAlgorithmType="">
      <providers>
        <clear />
        <add connectionStringName="LocalSqlServer" name="EwordAspNetSqlMembershipProvider" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" applicationName="/" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="3" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="1" passwordStrengthRegularExpression="" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </providers>
    </membership>
    <profile>
      <!--<providers>
        <clear/>
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="ApplicationServices" applicationName="/" />
      </providers>-->
      <properties>
        <add name="FriendlyName" />
      </properties>
    </profile>
    <roleManager enabled="true" cacheRolesInCookie="true" defaultProvider="EwordAspNetSqlRoleProvider">
      <providers>
        <clear />
        <add connectionStringName="LocalSqlServer" applicationName="/" name="EwordAspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </providers>
    </roleManager>
  </system.web>
  <system.serviceModel>
    <bindings>
      <!--旧消息验证绑定-->
      <wsHttpBinding>
        <!--<binding name="MySecurity" maxBufferPoolSize="12000000" maxReceivedMessageSize="12000000"
            useDefaultWebProxy="false">
          <readerQuotas maxStringContentLength="12000000" maxArrayLength="12000000" />
          <security mode="Message">
            <transport clientCredentialType="None" />
            <message clientCredentialType="UserName" />
          </security>
        </binding>-->

        <!--新消息验证绑定-->

        <binding  name="MessageAndUserName"   >
          <security  mode="Message">
            <transport clientCredentialType="None"/>
            <message clientCredentialType="Certificate"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <!--<behavior name="myb">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <serviceCredentials>
            <clientCertificate>
              <certificate findValue="WCFCert" storeLocation="LocalMachine"
                  x509FindType="FindBySubjectName" />
            </clientCertificate>
            <serviceCertificate findValue="WCFCert" storeLocation="CurrentUser"
                x509FindType="FindBySubjectName" />
            <userNameAuthentication userNamePasswordValidationMode="MembershipProvider"
                membershipProviderName="EwordAspNetSqlMembershipProvider" />
          </serviceCredentials>
        </behavior>-->
        <behavior name="MessageAndUserNameBehavior">
          <serviceCredentials>
            <serviceCertificate               
                storeName="My"               
            x509FindType="FindBySubjectName" 
            findValue="eulei.com.MIS" 
            storeLocation="LocalMachine"/>
            <clientCertificate >     

                <authentication certificateValidationMode="Custom" customCertificateValidatorType="eulei.com.MIS.Host.Code.ServiceX509CertificateValidator, eulei.com.MIS.Host"/>
         
            </clientCertificate>
            <!--<userNameAuthentication userNamePasswordValidationMode="Custom"
                                    customUserNamePasswordValidatorType="WCFService.MyUserNamePasswordValidator,WCFService" />-->
            <!--<userNameAuthentication userNamePasswordValidationMode="MembershipProvider"
                           membershipProviderName="EwordAspNetSqlMembershipProvider" />-->
          </serviceCredentials>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <services>
      <service behaviorConfiguration="MessageAndUserNameBehavior" name="eulei.com.MIS.Service.MISService">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="MessageAndUserName"
          bindingNamespace="http://www.eulei.com/MIS" contract="eulei.com.MIS.Contracts.IMISService">
          <identity>
            <dns value="eulei.com.MIS" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:55555/MISService" />
          </baseAddresses>
        </host>
      </service>
    </services>
  </system.serviceModel>
</configuration>
